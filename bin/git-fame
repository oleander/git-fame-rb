#!/usr/bin/env ruby

$LOAD_PATH.unshift File.dirname(__FILE__) + "/../lib"

require "git_fame"
require "trollop"

sort = ["name", "commits", "loc", "files"]
opts = Trollop::options do
  version "git-fame #{GitFame::VERSION} (c) 2012-#{Date.today.year} Linus Oleander"
  opt :repository, "What git repository should be used?", default: "."
  opt :sort, "What should the printed table be sorted by? #{sort.join(", ")}", default: "loc", type: String
  opt :progressbar, "Show progressbar during calculation", default: 1, type: Integer
  opt :whitespace, "Ignore whitespace changes", default: false
  opt :bytype, "Group line counts by file extension (i.e. .rb, .erb, .yml)", default: false
  opt :include, "Paths to include in git ls-files", default: "", type: String
  opt :exclude, "Paths to exclude (comma separated)", default: "", type: String
  opt :extension, "Comma-separated list of extensions to consider, leave blank for all", default: "", type: String
  opt :branch, "Branch to run on", default: "master", type: String
  opt :format, "Format (pretty/csv)", default: "pretty", type: String
  opt :since, "Since date for commits report", default: "1970-01-01", type:String
  opt :until, "Until date for commits report", default:"now", type: String
end

Trollop::die :sort, "must be one of the following; #{sort.join(", ")}" unless sort.include?(opts[:sort])
fame = GitFame::Base.new({
  repository: opts[:repository],
  progressbar: opts[:progressbar] == 1,
  sort: opts[:sort],
  whitespace: opts[:whitespace],
  bytype: opts[:bytype],
  include: opts[:include],
  exclude: opts[:exclude],
  extensions: opts[:extension],
  branch: opts[:branch],
  since: opts[:since],
  until: opts[:until]
})
opts[:format] == "csv" ? fame.csv_puts : fame.pretty_puts
